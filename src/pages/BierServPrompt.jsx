import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { FileText, Download } from "lucide-react";

export default function BierServPrompt() {
  const promptContent = `# BierServ - Sistema Completo para Cervejarias

## Vis√£o Geral
O BierServ √© uma plataforma digital completa para gest√£o de cervejarias, desenvolvida para ser **escal√°vel e vendida a m√∫ltiplos estabelecimentos**. O sistema oferece card√°pio digital, gest√£o de pedidos, controle de mesas, relat√≥rios fiscais e muito mais.

## Funcionalidades Principais

### üç∫ **Card√°pio Digital**
- **Gest√£o de Categorias**: Organize produtos por tipo (Pilsen, Weizen, IPA, etc.)
- **Gest√£o de Produtos**: Adicione produtos com m√∫ltiplas varia√ß√µes de volume e pre√ßo
- **Upload de Imagens**: Sistema integrado para upload de fotos dos produtos
- **Disponibilidade**: Controle de produtos dispon√≠veis/indispon√≠veis
- **Preview em Tempo Real**: Visualize como o card√°pio aparece para os clientes

### üì∫ **Display para TV**
- **Card√°pio para Televis√£o**: Exibi√ß√£o otimizada para TVs e projetores
- **Sem Distra√ß√µes**: Interface limpa focada apenas no card√°pio
- **Rota√ß√£o Autom√°tica**: Troca automaticamente entre categorias
- **Configur√°vel**: Escolha quais categorias exibir e tempo de rota√ß√£o
- **Chromecast/Fire TV**: Compat√≠vel com dispositivos de transmiss√£o
- **URLs P√∫blicas**: Links diretos para acesso em qualquer dispositivo

### üì± **Card√°pio do Cliente (QR Code)**
- **Acesso via QR Code**: Cada mesa possui QR code √∫nico
- **Interface Mobile**: Otimizada para smartphones
- **Carrinho de Compras**: Sistema completo de pedidos
- **Observa√ß√µes**: Campo para coment√°rios especiais do cliente
- **Finaliza√ß√£o de Pedido**: Envio direto para a cozinha

### üõéÔ∏è **Sistema de Pedidos**
- **Alertas Sonoros**: Notifica√ß√µes sonoras para novos pedidos
- **Pop-ups de 3 segundos**: Alertas visuais n√£o intrusivos
- **Status em Tempo Real**: Pendente ‚Üí Preparando ‚Üí Pronto ‚Üí Entregue
- **Filtros Avan√ßados**: Por mesa, status, data
- **Gest√£o de Gar√ßons**: Atribui√ß√£o de respons√°veis

### ü™ë **Gest√£o de Mesas**
- **QR Codes √önicos**: Gera√ß√£o autom√°tica para cada mesa
- **Status das Mesas**: Livre, Ocupada, Reservada
- **Capacidade**: Controle de lugares por mesa
- **Localiza√ß√£o**: Organiza√ß√£o por √°rea do estabelecimento
- **Impress√£o de QR Codes**: Para colocar nas mesas f√≠sicas

### üí∞ **Sistema Fiscal e Invoices**
- **Fechamento de Mesa**: Agrupamento autom√°tico de todos os pedidos
- **C√°lculo Autom√°tico**: Subtotal, impostos, taxa de servi√ßo
- **M√∫ltiplos Pagamentos**: Dinheiro, cart√£o, PIX
- **Relat√≥rios Fiscais**: Por per√≠odo, m√©todo de pagamento
- **Exporta√ß√£o**: Dados para contabilidade

### üìä **Dashboard e Relat√≥rios**
- **Vis√£o Geral**: Estat√≠sticas do dia em tempo real
- **Faturamento**: Receita total e ticket m√©dio
- **Mesas Ativas**: Controle de ocupa√ß√£o
- **Produtos Populares**: An√°lise de vendas
- **Relat√≥rios Detalhados**: Exporta√ß√£o de dados

### ‚öôÔ∏è **Sistema Escal√°vel e Configur√°vel**
- **Multi-tenant**: Cada cervejaria tem suas configura√ß√µes
- **Identidade Visual**: Logo, cores, nome do estabelecimento
- **Personaliza√ß√£o Completa**: Textos, idiomas, moedas
- **Configura√ß√µes por Estabelecimento**:
  - Nome e subt√≠tulo do neg√≥cio
  - Logo personalizado
  - Cores da interface
  - Informa√ß√µes de contato
  - Configura√ß√µes de exibi√ß√£o
  - Prefer√™ncias de funcionamento

### üë• **Gest√£o de Usu√°rios**
- **N√≠veis de Acesso**: Admin, Gerente, Gar√ßom
- **Permiss√µes Granulares**: Controle fino de funcionalidades
- **Perfis Personalizados**: Tema claro/escuro, idioma
- **Autentica√ß√£o Segura**: Login via Google

## Tecnologias Utilizadas

### Frontend
- **React** com hooks modernos
- **Tailwind CSS** para estiliza√ß√£o responsiva
- **Shadcn/UI** para componentes elegantes
- **Lucide React** para √≠cones consistentes
- **Framer Motion** para anima√ß√µes suaves
- **Date-fns** para manipula√ß√£o de datas

### Backend (Base44 Platform)
- **Entidades Din√¢micas**: Sistema flex√≠vel de dados
- **APIs REST**: Integra√ß√£o simplificada
- **Upload de Arquivos**: Sistema nativo de storage
- **Autentica√ß√£o**: Sistema integrado de usu√°rios

### Integra√ß√µes
- **QR Code Generator**: API externa para gera√ß√£o
- **Presentation API**: Para Chromecast/TV
- **Audio API**: Para notifica√ß√µes sonoras
- **File Upload**: Sistema nativo da plataforma

## Modelo de Neg√≥cio SaaS

### Escalabilidade
- **Multi-estabelecimento**: Um sistema, m√∫ltiplos clientes
- **Configura√ß√£o Independente**: Cada cervejaria tem suas configura√ß√µes
- **Dom√≠nios Personalizados**: URLs pr√≥prias para cada cliente
- **Dados Isolados**: Seguran√ßa e privacidade garantidas

### Customiza√ß√£o por Cliente
- **Branding Completo**: Logo, cores, textos
- **Funcionalidades Modulares**: Ative/desative recursos
- **Planos Diferentes**: B√°sico, Profissional, Enterprise
- **Suporte Personalizado**: Para cada n√≠vel de plano

### Monetiza√ß√£o
- **Assinatura Mensal/Anual**: Modelo SaaS recorrente
- **Planos Escalonados**: Por n√∫mero de mesas/pedidos
- **Setup Fee**: Taxa √∫nica de implementa√ß√£o
- **Treinamento**: Servi√ßos adicionais de consultoria

## Pr√≥ximos Passos de Desenvolvimento

### Funcionalidades Avan√ßadas
1. **Sistema de Reservas**: Agendamento de mesas online
2. **Programa de Fidelidade**: Pontos e recompensas
3. **Integra√ß√£o com Delivery**: iFood, Uber Eats, Rappi
4. **Analytics Avan√ßados**: Machine Learning para insights
5. **App Mobile Nativo**: Para gar√ßons e gestores

### Integra√ß√µes Externas
1. **Sistemas de Pagamento**: PagSeguro, Mercado Pago
2. **ERPs**: Integra√ß√£o com sistemas existentes
3. **Emiss√£o de NFe**: Notas fiscais autom√°ticas
4. **WhatsApp Business**: Notifica√ß√µes via chat
5. **Google Analytics**: Tracking de comportamento

### Melhorias de UX/UI
1. **Tema Personalizado**: Cores da marca do cliente
2. **Modo Offline**: Funcionamento sem internet
3. **PWA**: Progressive Web App para instala√ß√£o
4. **Acessibilidade**: WCAG 2.1 compliance
5. **Internacionaliza√ß√£o**: M√∫ltiplos idiomas

## Arquitetura do Sistema

\`\`\`
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   Frontend      ‚îÇ    ‚îÇ   Base44        ‚îÇ    ‚îÇ   Integra√ß√µes   ‚îÇ
‚îÇ   (React SPA)   ‚îÇ‚óÑ‚îÄ‚îÄ‚ñ∫‚îÇ   Platform      ‚îÇ‚óÑ‚îÄ‚îÄ‚ñ∫‚îÇ   Externas      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
         ‚îÇ                        ‚îÇ                        ‚îÇ
         ‚ñº                        ‚ñº                        ‚ñº
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   ‚Ä¢ Dashboard   ‚îÇ    ‚îÇ   ‚Ä¢ Entities    ‚îÇ    ‚îÇ   ‚Ä¢ QR Codes    ‚îÇ
‚îÇ   ‚Ä¢ Card√°pio    ‚îÇ    ‚îÇ   ‚Ä¢ Users       ‚îÇ    ‚îÇ   ‚Ä¢ Payments    ‚îÇ
‚îÇ   ‚Ä¢ Pedidos     ‚îÇ    ‚îÇ   ‚Ä¢ Files       ‚îÇ    ‚îÇ   ‚Ä¢ Analytics   ‚îÇ
‚îÇ   ‚Ä¢ Mesas       ‚îÇ    ‚îÇ   ‚Ä¢ APIs        ‚îÇ    ‚îÇ   ‚Ä¢ Notifications‚îÇ
‚îÇ   ‚Ä¢ Relat√≥rios  ‚îÇ    ‚îÇ   ‚Ä¢ Auth        ‚îÇ    ‚îÇ   ‚Ä¢ Fiscal      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

## Como Implementar para Novos Clientes

### 1. **Setup Inicial**
\`\`\`bash
# Clone do projeto base
git clone [repository]
cd bierserv-platform

# Configura√ß√£o do cliente
npm run setup-client --name="Cervejaria XYZ"
\`\`\`

### 2. **Configura√ß√£o da Cervejaria**
- Upload do logo
- Defini√ß√£o de cores
- Configura√ß√£o de mesas
- Cadastro de produtos
- Treinamento da equipe

### 3. **Go-Live**
- Testes de integra√ß√£o
- Impress√£o de QR codes
- Treinamento final
- Suporte p√≥s-implementa√ß√£o

## Suporte e Manuten√ß√£o

### N√≠veis de Suporte
- **B√°sico**: Email, 48h resposta
- **Profissional**: Chat, 24h resposta
- **Enterprise**: Telefone, 4h resposta, gerente dedicado

### Atualiza√ß√µes
- **Autom√°ticas**: Patches de seguran√ßa
- **Opcionais**: Novas funcionalidades
- **Personalizadas**: Desenvolvimentos espec√≠ficos

---

**BierServ - Transformando a experi√™ncia em cervejarias atrav√©s da tecnologia** üç∫`;

  const downloadPrompt = () => {
    const element = document.createElement("a");
    const file = new Blob([promptContent], { type: 'text/markdown' });
    element.href = URL.createObjectURL(file);
    element.download = "BierServ_Platform_Prompt.md";
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
  };

  return (
    <div className="p-6 md:p-8 bg-gradient-to-br from-slate-50 via-stone-50 to-zinc-50 dark:from-slate-900 dark:via-slate-800 dark:to-zinc-900 min-h-screen">
      <div className="max-w-4xl mx-auto space-y-6">
        {/* Header */}
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
          <div>
            <h1 className="text-3xl font-bold text-slate-800 dark:text-slate-100 mb-2">
              Documenta√ß√£o do Sistema BierServ
            </h1>
            <p className="text-slate-600 dark:text-slate-400">
              Prompt completo para apresenta√ß√£o e comercializa√ß√£o da plataforma
            </p>
          </div>
          <button
            onClick={downloadPrompt}
            className="flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors"
          >
            <Download className="w-4 h-4" />
            Baixar Markdown
          </button>
        </div>

        {/* Content */}
        <Card className="bg-white/90 dark:bg-slate-800/90 backdrop-blur-sm">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-slate-800 dark:text-slate-100">
              <FileText className="w-5 h-5" />
              Conte√∫do do Prompt
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="bg-slate-50 dark:bg-slate-900 p-6 rounded-lg overflow-auto max-h-96">
              <pre className="text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap font-mono">
                {promptContent}
              </pre>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}